"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: victory_mirosya (https://sketchfab.com/victory_mirosya)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/fox-f372c04de44640fbb6a4f9e4e5845c78
Title: Fox
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Euler, Vector3 } from "@react-three/fiber";

type propType = {
	currentAnimation: any;
	position: Vector3;
	rotation: Euler;
	scale: Vector3;
};
type GLTFResult = GLTF & {
	nodes: {
		Object_7: THREE.SkinnedMesh;
		Object_8: THREE.SkinnedMesh;
		Object_9: THREE.SkinnedMesh;
		Object_10: THREE.SkinnedMesh;
		Object_11: THREE.SkinnedMesh;
		GLTF_created_0_rootJoint: THREE.Bone;
	};
	materials: {
		PaletteMaterial001: THREE.MeshStandardMaterial;
	};
};

const Fox = ({ currentAnimation, ...props }: propType) => {
	const group = useRef<THREE.Group>(null);
	const { nodes, materials, animations } = useGLTF("/assets/3d/fox.glb") as GLTFResult;
	const { actions } = useAnimations(animations, group);

	useEffect(() => {
		Object.values(actions).forEach((action) => {
			action?.stop();
		});

		if (actions[currentAnimation]) actions[currentAnimation]?.play();
	}, [actions, currentAnimation]);
	return (
		<group
			ref={group}
			{...props}
			dispose={null}>
			<group name="Sketchfab_Scene">
				<primitive object={nodes.GLTF_created_0_rootJoint} />
				<skinnedMesh
					name="Object_7"
					geometry={nodes.Object_7.geometry}
					material={materials.PaletteMaterial001}
					skeleton={nodes.Object_7.skeleton}
				/>
				<skinnedMesh
					name="Object_8"
					geometry={nodes.Object_8.geometry}
					material={materials.PaletteMaterial001}
					skeleton={nodes.Object_8.skeleton}
				/>
				<skinnedMesh
					name="Object_9"
					geometry={nodes.Object_9.geometry}
					material={materials.PaletteMaterial001}
					skeleton={nodes.Object_9.skeleton}
				/>
				<skinnedMesh
					name="Object_10"
					geometry={nodes.Object_10.geometry}
					material={materials.PaletteMaterial001}
					skeleton={nodes.Object_10.skeleton}
				/>
				<skinnedMesh
					name="Object_11"
					geometry={nodes.Object_11.geometry}
					material={materials.PaletteMaterial001}
					skeleton={nodes.Object_11.skeleton}
				/>
			</group>
		</group>
	);
};

export default Fox;
